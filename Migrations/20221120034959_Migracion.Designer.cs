// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoTallerMecanico.Models;

#nullable disable

namespace SistemaTallerMecanico.Migrations
{
    [DbContext(typeof(TallerContext))]
    [Migration("20221120034959_Migracion")]
    partial class Migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Agenda", b =>
                {
                    b.Property<int>("IdAgenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgenda"), 1L, 1);

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<int>("OrdenIdOrden")
                        .HasColumnType("int");

                    b.HasKey("IdAgenda");

                    b.HasIndex("OrdenIdOrden");

                    b.ToTable("Agenda");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Cliente", b =>
                {
                    b.Property<int>("CUI")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CUI"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CUI");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Cotizacion", b =>
                {
                    b.Property<int>("IdCotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCotizacion"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("NombreCliente")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("IdCotizacion");

                    b.ToTable("Cotizacion");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.DetalleCotizacion", b =>
                {
                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdCotizacion")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.Property<float>("Subtotal")
                        .HasColumnType("real");

                    b.HasKey("IdServicio", "IdCotizacion");

                    b.HasIndex("IdCotizacion");

                    b.ToTable("DetalleCotizacion");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.DetalleOrden", b =>
                {
                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdOrden")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.HasKey("IdServicio", "IdOrden");

                    b.HasIndex("IdOrden");

                    b.ToTable("DetalleOrden");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Sueldo")
                        .HasColumnType("real");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEmpleado");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Orden", b =>
                {
                    b.Property<int>("IdOrden")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrden"), 1L, 1);

                    b.Property<int>("CotizacionIdCotizacion")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoIdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("IdCotizacion")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("NumeroPlaca")
                        .HasColumnType("int");

                    b.Property<int>("VehiculoNumeroPlaca")
                        .HasColumnType("int");

                    b.HasKey("IdOrden");

                    b.HasIndex("CotizacionIdCotizacion");

                    b.HasIndex("EmpleadoIdEmpleado");

                    b.HasIndex("VehiculoNumeroPlaca");

                    b.ToTable("Orden");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"), 1L, 1);

                    b.Property<int>("CategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdServicio");

                    b.HasIndex("CategoriaIdCategoria");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"), 1L, 1);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadoIdEmpleado")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("EmpleadoIdEmpleado");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Vehiculo", b =>
                {
                    b.Property<int>("NumeroPlaca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NumeroPlaca"), 1L, 1);

                    b.Property<int>("ClienteCUI")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NumeroPlaca");

                    b.HasIndex("ClienteCUI");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Agenda", b =>
                {
                    b.HasOne("ProyectoTallerMecanico.Models.Orden", "Orden")
                        .WithMany("Agendas")
                        .HasForeignKey("OrdenIdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.DetalleCotizacion", b =>
                {
                    b.HasOne("ProyectoTallerMecanico.Models.Cotizacion", "Cotizacion")
                        .WithMany("DetalleCotizaciones")
                        .HasForeignKey("IdCotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTallerMecanico.Models.Servicio", "Servicio")
                        .WithMany("DetalleCotizaciones")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.DetalleOrden", b =>
                {
                    b.HasOne("ProyectoTallerMecanico.Models.Orden", "Orden")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdOrden")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTallerMecanico.Models.Servicio", "Servicio")
                        .WithMany("DetalleOrdenes")
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orden");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Orden", b =>
                {
                    b.HasOne("ProyectoTallerMecanico.Models.Cotizacion", "Cotizacion")
                        .WithMany()
                        .HasForeignKey("CotizacionIdCotizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTallerMecanico.Models.Empleado", "Empleado")
                        .WithMany("Ordenes")
                        .HasForeignKey("EmpleadoIdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoTallerMecanico.Models.Vehiculo", "Vehiculo")
                        .WithMany("Ordenes")
                        .HasForeignKey("VehiculoNumeroPlaca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cotizacion");

                    b.Navigation("Empleado");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Servicio", b =>
                {
                    b.HasOne("ProyectoTallerMecanico.Models.Categoria", "Categoria")
                        .WithMany("Servicios")
                        .HasForeignKey("CategoriaIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Usuario", b =>
                {
                    b.HasOne("ProyectoTallerMecanico.Models.Empleado", "Empleado")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpleadoIdEmpleado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Vehiculo", b =>
                {
                    b.HasOne("ProyectoTallerMecanico.Models.Cliente", "Cliente")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ClienteCUI")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Categoria", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Cliente", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Cotizacion", b =>
                {
                    b.Navigation("DetalleCotizaciones");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Empleado", b =>
                {
                    b.Navigation("Ordenes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Orden", b =>
                {
                    b.Navigation("Agendas");

                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Servicio", b =>
                {
                    b.Navigation("DetalleCotizaciones");

                    b.Navigation("DetalleOrdenes");
                });

            modelBuilder.Entity("ProyectoTallerMecanico.Models.Vehiculo", b =>
                {
                    b.Navigation("Ordenes");
                });
#pragma warning restore 612, 618
        }
    }
}
